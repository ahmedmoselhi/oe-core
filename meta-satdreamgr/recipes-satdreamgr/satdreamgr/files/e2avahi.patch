diff --git a/lib/base/e2avahi.cpp b/lib/base/e2avahi.cpp
index 4bf5a0f..9013ad5 100644
--- a/lib/base/e2avahi.cpp
+++ b/lib/base/e2avahi.cpp
@@ -63,14 +63,14 @@ struct AvahiWatch: public sigc::trackable
 struct AvahiServiceEntry
 {
 	AvahiEntryGroup *group;
-	const char* service_name;
-	const char* service_type;
+	char* service_name;
+	char* service_type;
 	unsigned short port_num;
 
 	AvahiServiceEntry(const char *n, const char *t, unsigned short p):
 		group(NULL),
-		service_name(n),
-		service_type(t),
+		service_name(n ? strdup(n) : NULL),
+		service_type(t ? strdup(t) : NULL),
 		port_num(p)
 	{}
 	AvahiServiceEntry():
@@ -79,8 +79,8 @@ struct AvahiServiceEntry
 };
 inline bool operator==(const AvahiServiceEntry& lhs, const AvahiServiceEntry& rhs)
 {
-	return (lhs.service_type == rhs.service_type) &&
-			(lhs.port_num == rhs.port_num); 
+	return (strcmp(lhs.service_type, rhs.service_type) == 0) &&
+			(lhs.port_num == rhs.port_num);
 }
 inline bool operator!=(const AvahiServiceEntry& lhs, const AvahiServiceEntry& rhs)
 { return !(lhs == rhs); }
@@ -139,6 +139,10 @@ static void avahi_service_try_register(AvahiServiceEntry *entry)
 	if ((!service_name) || (!*service_name))
 		service_name = avahi_client_get_host_name(avahi_client);
 
+	eDebug("[Avahi] Will Register %s (%s) on %s:%u",
+		service_name, entry->service_type,
+		avahi_client_get_host_name(avahi_client), entry->port_num);
+
 	if (!avahi_entry_group_add_service(entry->group,
 			AVAHI_IF_UNSPEC, AVAHI_PROTO_UNSPEC,
 			(AvahiPublishFlags)0,
@@ -409,7 +413,12 @@ void e2avahi_close()
 		for (AvahiServiceEntryList::iterator it = avahi_services.begin();
 			it != avahi_services.end(); ++it)
 		{
+			if (it->group) avahi_entry_group_free(it->group);
+			if (it->service_name) free(it->service_name);
+			if (it->service_type) free(it->service_type);
 			it->group = NULL;
+			it->service_name = NULL;
+			it->service_type = NULL;
 		}
 	}
 }
